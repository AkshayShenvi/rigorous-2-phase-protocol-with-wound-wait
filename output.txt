b1:;Transaction 1: start
r1(Y);:Transaction 1: acquire read lock on Y
w1(Y);:Transaction 1: acquire write lock on Y
r1(Z);:Transaction 1: acquire read lock on Z
b2:;Transaction 2: start
r2(X);:Transaction 2: acquire read lock on X
w2(X);:Transaction 2: acquire write lock on X
w1(Z);:Transaction 1: acquire write lock on Z
r2(Y);:Transaction 2: wound wait :wait requesting transaction 2
e1;:Transaction 1: end
b3:;Transaction 3: start
r3(Z);:Transaction 3: acquire read lock on Z
w3(Z);:Transaction 3: acquire write lock on Z
w2(Y);:Transaction 2 is waiting, added operation to waiting list
b4:;Transaction 4: start
w4(X);:Transaction 4: requesting write lock on X: wound wait : wait requesting transaction 4
r3(X);:Transaction 3: wound wait :wait requesting transaction 3
w3(X);:Transaction 3 is waiting, added operation to waiting list
w2(Y);:Transaction 2: acquire write lock on Y
e2;:Transaction 2: end
e4;:Transaction 4: end
w3(X);:Transaction 3: acquire write lock on X
e3;:Transaction 3: end

*number of output operations may be greater than number of input operations 
 because operations that are waiting are started once 
 the locks are acquired