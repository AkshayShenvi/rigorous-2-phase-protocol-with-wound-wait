Akshay Shenvi, 1001670648
Yash Bardapurkar, 1001731650

b1;     :Transaction 1: start
r1(Y);  :Transaction 1: acquire read lock on Y
w1(Y);  :Transaction 1: acquire write lock on Y
r1(Z);  :Transaction 1: acquire read lock on Z
b2;     :Transaction 2: start
r2(X);  :Transaction 2: acquire read lock on X
w2(X);  :Transaction 2: acquire write lock on X
w1(Z);  :Transaction 1: acquire write lock on Z
r2(Y);  :Transaction 2: Requesting read lock on Y : wound wait : Block Transaction 2, add operation to wait list
e1;     :Transaction 1: end, release locks on 'Y' 'Z'
r2(Y);  :Transaction 2: acquire read lock on Y (from waitlist)
b3;     :Transaction 3: start
r3(Z);  :Transaction 3: acquire read lock on Z
w3(Z);  :Transaction 3: acquire write lock on Z
w2(Y);  :Transaction 2: acquire write lock on Y
e2;     :Transaction 2: end, release locks on 'X' 'Y'
r3(X);  :Transaction 3: acquire read lock on X
w3(X);  :Transaction 3: acquire write lock on X
b4;     :Transaction 4: start
w4(X);  :Transaction 4: Requesting write lock on X: wound wait : Block Transaction 4, add operation to wait list
e3;     :Transaction 3: end, release locks on 'Z' 'X'
w4(X);  :Transaction 4: acquire write lock on X (from waitlist)
e4;     :Transaction 4: end, release locks on 'X'

Transaction 1 : timestamp: 1, transaction is completed
Transaction 2 : timestamp: 2, transaction is completed
Transaction 3 : timestamp: 3, transaction is completed
Transaction 4 : timestamp: 4, transaction is completed

*number of output operations may be greater than number of input operations 
 because operations that are waiting are started once 
 the locks are acquired